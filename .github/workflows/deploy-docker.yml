name: CI CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  ci:
    name: CI - Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: latest

      - name: Install dependencies
        run: npm install

      # - name: Applying linter
      #   run: npm run lint

      # - name: Run tests
      #   run: npm test

  cd:
    name: CD - Build & Deploy
    runs-on: ubuntu-latest
    needs: ci
    if: success() && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: latest

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build
        
      - name: Debug Secrets
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        run: echo "Docker Username ${{ env.DOCKERHUB_USERNAME }}"

      - name: Log into Docker Hub
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        run: docker build -t ${{ vars.IMAGE_NAME }}:latest .

      - name: Push Docker image to Docker Hub
        run: docker push ${{ vars.IMAGE_NAME }}:latest
